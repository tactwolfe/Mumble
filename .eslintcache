[{"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\index.js":"1","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\App.js":"2","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\LandingPage.js":"3","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Authentication\\Login\\Login.js":"4","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Main_page\\Mypost\\MyPost.js":"5","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Authentication\\AuthProvider.js":"6","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Authentication\\Forget Password\\ForgetPassword.js":"7","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Main_page\\Chatroom\\Chatroom.js":"8","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Authentication\\Register\\Register.js":"9","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Main_page\\NewpostContainer\\NewpostContainer.js":"10","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Main_page\\Homepage\\Homepage.js":"11","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Private_route\\PrivateRoute.js":"12","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\HomepageBlurredHolder.js":"13","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Landing_page_theme\\Theme.js":"14","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\hoc\\Auxillary.js":"15","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\firebase.js":"16","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Post\\Post.js":"17","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\SideNavigation\\SideNavigation.js":"18","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\NewPost\\NewPost.js":"19","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\Chatroom_sidebar_components\\Sidebar.js":"20","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\ChatroomWelcome\\ChatroomWelcomePage.js":"21","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\Chatroom_chat\\Chat.js":"22","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\About_us\\About.js":"23","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Homepage\\Homepage.js":"24","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Footer\\Footer.js":"25","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Features\\Features.js":"26","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Navigation\\Navigation.js":"27","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Comments\\Comments.js":"28","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\Chatroom_chat\\Chat_bubble\\ChatBubble.js":"29","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\Chatroom_sidebar_components\\Sidebar_chat\\SidebarChat.js":"30"},{"size":597,"mtime":1613507712215,"results":"31","hashOfConfig":"32"},{"size":1753,"mtime":1613720594055,"results":"33","hashOfConfig":"32"},{"size":383,"mtime":1609853282576,"results":"34","hashOfConfig":"32"},{"size":3577,"mtime":1613675286018,"results":"35","hashOfConfig":"32"},{"size":1353,"mtime":1613735035097,"results":"36","hashOfConfig":"32"},{"size":1248,"mtime":1613509171330,"results":"37","hashOfConfig":"32"},{"size":2573,"mtime":1613675304027,"results":"38","hashOfConfig":"32"},{"size":984,"mtime":1613665411925,"results":"39","hashOfConfig":"32"},{"size":5020,"mtime":1613675296767,"results":"40","hashOfConfig":"32"},{"size":689,"mtime":1612927483084,"results":"41","hashOfConfig":"32"},{"size":1201,"mtime":1613735069582,"results":"42","hashOfConfig":"32"},{"size":483,"mtime":1612773932091,"results":"43","hashOfConfig":"32"},{"size":576,"mtime":1611378187481,"results":"44","hashOfConfig":"32"},{"size":1173,"mtime":1610016547862,"results":"45","hashOfConfig":"32"},{"size":61,"mtime":1609853242296,"results":"46","hashOfConfig":"32"},{"size":802,"mtime":1613507693566,"results":"47","hashOfConfig":"32"},{"size":3723,"mtime":1613620120238,"results":"48","hashOfConfig":"32"},{"size":2557,"mtime":1613666284293,"results":"49","hashOfConfig":"32"},{"size":3715,"mtime":1613577751371,"results":"50","hashOfConfig":"32"},{"size":3613,"mtime":1613630591238,"results":"51","hashOfConfig":"32"},{"size":719,"mtime":1613671276701,"results":"52","hashOfConfig":"32"},{"size":3936,"mtime":1613674729452,"results":"53","hashOfConfig":"32"},{"size":935,"mtime":1611376988479,"results":"54","hashOfConfig":"32"},{"size":686,"mtime":1612497593228,"results":"55","hashOfConfig":"32"},{"size":1844,"mtime":1611754602256,"results":"56","hashOfConfig":"32"},{"size":1946,"mtime":1613720455381,"results":"57","hashOfConfig":"32"},{"size":978,"mtime":1612446902440,"results":"58","hashOfConfig":"32"},{"size":316,"mtime":1613588766864,"results":"59","hashOfConfig":"32"},{"size":641,"mtime":1613672694250,"results":"60","hashOfConfig":"32"},{"size":1556,"mtime":1612973968499,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1dc5gzr",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\index.js",[],["133","134"],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\App.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\LandingPage.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Authentication\\Login\\Login.js",["135"],"import React,{ useRef , useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth} from '../AuthProvider';\r\n\r\n//src for our illustration & logo\r\nimport AuthenticationIllustration from '../../../assets/Images/Authentication.svg';\r\nimport logo from \"../../../assets/Images/logo.png\";\r\n\r\n//our style sheet\r\nimport \"./Login.css\";\r\n\r\nconst Login = ()=> {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login , currentUser } = useAuth();\r\n    const [error , setError] = useState('');\r\n    const [loading , setLoading] = useState(false);\r\n    const history = useHistory();\r\n    \r\n\r\n    async function submitHandler(event){\r\n        event.preventDefault()\r\n\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value , passwordRef.current.value )\r\n            history.push('/homepage')\r\n\r\n        }catch{\r\n            setError('Failed to Login check your network connection and make sure that your credentials are correct')\r\n        }\r\n\r\n        setLoading(false) \r\n    }\r\n\r\n \r\n        return(\r\n            <div className=\"authentication\">\r\n                <img src={logo} className=\"login-logo\" alt=\"logo\"/>\r\n                <img src={AuthenticationIllustration} className=\"authentication_img\" alt=\"illustration\"/>\r\n                <div className=\"authentication_box\">\r\n                    <p className=\"auth_heading\">Welcome Back :)</p>\r\n                    { error ? <p className='error' >{error}</p> : null}\r\n                    {/* {currentUser && currentUser.email} */}\r\n                    <form className=\"auth_form\" onSubmit={submitHandler}>\r\n                        <div className=\"auth_form_container\">\r\n                            <input \r\n                            type=\"email\" \r\n                            placeholder=\"Enter Your Email\" \r\n                            name=\"email\" \r\n                            className=\"auth_form_input\" \r\n                            ref={emailRef} \r\n                            required/>\r\n\r\n                            <label \r\n                            htmlFor=\"email\" \r\n                            className=\"auth_form_label\">Enter Your Email\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"auth_form_container\">\r\n                            <input \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            name=\"password\" \r\n                            className=\"auth_form_input\" \r\n                            ref={passwordRef} \r\n                            required/>\r\n\r\n                            <label \r\n                            htmlFor=\"password\" \r\n                            className=\"auth_form_label\">Password\r\n                            </label>\r\n                        </div>\r\n                        <input \r\n                        disabled={loading} \r\n                        type=\"submit\" \r\n                        className=\"auth_form_button\" \r\n                        value=\"Login\"/> \r\n                         \r\n                    </form>\r\n                    <p className=\"auth_para\">Not a member?<span><a href=\"/register\" className=\"auth_page_register\">Register</a></span></p>\r\n                    <p className=\"auth_para\">Forget your password?<span><a href=\"/forget-password\" className=\"auth_page_register\">Reset Here</a></span></p>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Login;","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Main_page\\Mypost\\MyPost.js",["136"],"import React ,{useState , useEffect} from 'react';\r\nimport {useAuth } from '../../Authentication/AuthProvider';\r\nimport {db} from '../../../firebase';\r\n\r\n\r\nimport './MyPost.css';\r\n\r\nimport Post from '../../../component/Post/Post';\r\nimport SideNavigation from '../../../component/SideNavigation/SideNavigation';\r\n\r\nconst HomePage =()=> {\r\n \r\n    const {currentUser} = useAuth();\r\n    const [posts , setPosts] = useState([]);\r\n\r\n\r\n    console.log(currentUser.email);\r\n\r\n    useEffect( ()=> {\r\n\r\n        db.collection('posts').where('email', '==' , currentUser.email ).onSnapshot( snapshot =>{\r\n\r\n            setPosts(snapshot.docs.map(doc => ({\r\n\r\n                id:doc.id,\r\n                post:doc.data()\r\n\r\n                })\r\n            ));\r\n        })\r\n    },[])\r\n\r\n    console.log(posts);\r\n\r\n    const fetchposts = posts.map(({id, post}) => {\r\n            return <Post key={id} postId={id} imageUrl={post.imageUrl} posts={post.caption} email={post.email} likes={post.likes}/>\r\n  \r\n    })\r\n\r\n    return(\r\n            <div className=\"my-post\">\r\n                <SideNavigation/>\r\n                <div className=\"my-post_postholder\">\r\n                    { posts.length === 0 ? <p className='my-post_empty'>You Have not posted anything yet</p> : fetchposts}\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default HomePage;","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Authentication\\AuthProvider.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Authentication\\Forget Password\\ForgetPassword.js",["137"],"import React,{useRef,useState} from 'react';\r\n\r\n//illustration\r\nimport expertLogin from '../../../assets/Images/expertLoginIllustration.svg';\r\nimport logo from '../../../assets/Images/logo.png';\r\nimport {useAuth} from '../AuthProvider';\r\n\r\n//my css\r\nimport './ForgetPassword.css';\r\n\r\nconst ForgetPassword = ()=> {\r\n\r\n        const emailRef = useRef();\r\n        const { resetPassword} = useAuth();\r\n        const [error , setError] = useState('');\r\n        const [loading , setLoading] = useState(false);\r\n        const [message , setMessage] = useState('');\r\n        // const history = useHistory();\r\n\r\n        async function submitHandler(event){\r\n            event.preventDefault()\r\n    \r\n            try{\r\n                setMessage('')\r\n                setError('')\r\n                setLoading(true)\r\n                await resetPassword(emailRef.current.value)\r\n                setMessage('Check your Inbox for further instruction')\r\n                // history.push('/homepage')\r\n    \r\n            }catch{\r\n                setError('Failed to reset password')\r\n            }\r\n    \r\n            setLoading(false) \r\n        }\r\n    \r\n        return(\r\n            <div className=\"forgetpassword_authentication\">\r\n                <img src={logo} className=\"forgetpassword_login-logo\" alt=\"logo\"/>\r\n                <img src={expertLogin} className=\"forgetpassword_authentication_img\" alt=\"illustration\"/>\r\n                <div className=\"forgetpassword_authentication_box\">\r\n                    <p className=\"forgetpassword_auth_heading\">Reset your Password :)</p>\r\n                    { error ? <p className='error' >{error}</p> : null}\r\n                    { message ? <p className='success'>{message}</p> : null}\r\n                    <form className=\"forgetpassword_auth_form\" onSubmit={submitHandler}>\r\n                        <div className=\"forgetpassword_auth_form_container\">\r\n                            <input type=\"email\" placeholder=\"Enter Your Email\" name=\"email\" className=\"forgetpassword_auth_form_input\" ref={emailRef}  required/>\r\n                            <label htmlFor=\"email\" className=\"forgetpassword_auth_form_label\">Enter Your Email</label>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"forgetpassword_auth_form_button\" value=\"Reset\"/>  \r\n                    </form>  \r\n                    <p className=\"auth_para\">Go back to <span><a href=\"/login\" className=\"forgetpassword_page_login\">Login</a></span></p>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default ForgetPassword;","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Main_page\\Chatroom\\Chatroom.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Authentication\\Register\\Register.js",["138"],"import React , { useRef, useState }  from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../AuthProvider';\r\n\r\n\r\n//our illustration\r\nimport registrationIllustration from '../../../assets/Images/registerIllustration.svg';\r\nimport logo from '../../../assets/Images/logo.png';\r\n\r\n//our stylesheet\r\nimport './Register.css';\r\n\r\nconst Register = (props) => {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const {signup , currentUser} = useAuth()\r\n    const [error , setError] = useState('');\r\n    const history = useHistory();\r\n    const [loading , setLoading] = useState(false);\r\n\r\n\r\n\r\n    async function submitHandler(event){\r\n\r\n        event.preventDefault()\r\n\r\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n            return setError('passwords do not match')\r\n        }\r\n\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value , passwordRef.current.value )\r\n            history.push('/homepage')\r\n        }catch{\r\n            setError('Failed to create an account')\r\n        }\r\n\r\n        setLoading(false) \r\n    }\r\n\r\n        return(\r\n                <div className=\"registration\">\r\n                    <img src={logo} alt=\"logo\" className=\"registration_logo\"/>\r\n                    <img src={registrationIllustration} alt=\"reg-img\" className=\"registration_img\"/>\r\n                    <div className=\"registration_box\">\r\n                        <h3 className=\"registration_heading\">Oh hi! we are so glad that you want to join our community :)</h3>\r\n                        <p className=\"registration_sub_heading\">but before we log you in we need some information from you so please fill the form below</p>\r\n                        { error ? <p className='error' >{error}</p> : null}\r\n                        {/* {currentUser && currentUser.email} */}\r\n                        <form className=\"registration_form\" onSubmit={submitHandler}>\r\n                            <div className=\"registration_form_container\">\r\n                                    <input \r\n                                    type=\"email\" \r\n                                    placeholder=\"Enter Your Email\" \r\n                                    name=\"email\" \r\n                                    className=\"registration_form_input\" \r\n                                    ref={emailRef} \r\n                                    required />\r\n\r\n                                    <label \r\n                                    htmlFor=\"email\" \r\n                                    className=\"registration_form_label\">\r\n                                    Enter Your Email\r\n                                    </label>\r\n                            </div>\r\n                            <div className=\"registration_form_container\">\r\n                                    <input \r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                    name=\"password\" \r\n                                    className=\"registration_form_input\" \r\n                                    ref={passwordRef} \r\n                                    required />\r\n\r\n                                    <label \r\n                                    htmlFor=\"password\" \r\n                                    className=\"registration_form_label\">\r\n                                    Password <span style={{color : \"red\"}}> (NOTE : Make sure it is 6 character long)</span>\r\n                                    </label>\r\n                            </div>\r\n                            <div className=\"registration_form_container\">\r\n                                    <input \r\n                                    type=\"password\" \r\n                                    placeholder=\"Confirm Password\" \r\n                                    name=\"confirm_password\" \r\n                                    className=\"registration_form_input\" \r\n                                    ref={passwordConfirmRef} \r\n                                    required />\r\n\r\n                                    <label \r\n                                    htmlFor=\"confirm_password\" \r\n                                    className=\"registration_form_label\">\r\n                                    Confirm Password\r\n                                    </label>\r\n                            </div>\r\n                            <input \r\n                            disabled={loading} \r\n                            type=\"submit\" \r\n                            className=\"registration_form_button\" \r\n                            value=\"Register\"/>  \r\n\r\n                        </form>\r\n                        <p className=\"registration_para\">Already a member?<span><a href=\"/login\" className=\"registration_page_register\">Login</a></span></p>\r\n                    </div>\r\n            </div>  \r\n        );\r\n    \r\n}\r\n\r\nexport default Register;","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Main_page\\NewpostContainer\\NewpostContainer.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Main_page\\Homepage\\Homepage.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Private_route\\PrivateRoute.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\HomepageBlurredHolder.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Landing_page_theme\\Theme.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\hoc\\Auxillary.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\firebase.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Post\\Post.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\SideNavigation\\SideNavigation.js",["139","140"],"import React,{useState} from 'react';\r\nimport {NavLink , useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../../container/Authentication/AuthProvider';\r\n\r\nimport Logo from '../../assets/Images/logo.png';\r\nimport Logout from '../../assets/Images/logout.svg';\r\nimport './SideNavigation.css';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nconst SideNavigation =()=> {\r\n\r\n    const history = useHistory();\r\n    const [error , setError] = useState('');\r\n    const {logout ,currentUser} = useAuth();\r\n\r\n\r\n    async function handleLogout() {\r\n        setError('')\r\n        \r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n            \r\n        } catch (error) {\r\n            setError (error)\r\n            console.log(error);\r\n        }\r\n    }\r\n    return (\r\n        <header className=\"side_navigation\">\r\n                    <nav className=\"side_nav\">\r\n                        <div>\r\n                            <img src={Logo} alt=\"logo\" className=\"side_nav_logo\"/>\r\n                            <h2 className=\"side_nav_name\">MUMBLE</h2>\r\n                        </div> \r\n                        <ul className=\"side_nav_ul\">\r\n                            {/* <li>{currentUser && currentUser.email}</li> */}\r\n                            <li className=\"side_nav_links\"><NavLink to=\"/homepage\" exact className=\"side_nav_link\"><HomeIcon/> Home</NavLink></li>\r\n                            <li className=\"side_nav_links\"><NavLink to=\"/my-post\" exact className=\"side_nav_link\"><MyLocationIcon/> My posts</NavLink></li>\r\n                            <li className=\"side_nav_links\"><NavLink to=\"/new-post\"  className=\"side_nav_link\"><CreateIcon/> Create post</NavLink></li>\r\n                            <li className=\"side_nav_links\"><NavLink to=\"/chatroom\"  className=\"side_nav_link\" target='_blank'><GroupIcon/> Chat Rooms</NavLink></li>\r\n                            <li className=\"side_nav_links\"><a href=\"https://mummblly.herokuapp.com/\"  className=\"side_nav_link\" target='_blank' rel=\"noreferrer\"><TelegramIcon/> Random chat</a></li>\r\n                        </ul>\r\n                        <NavLink onClick={handleLogout}  to=\"/login\" exact><img src={Logout} alt=\"logout\" className=\"logout\"/></NavLink>\r\n                    </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default SideNavigation;\r\n","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\NewPost\\NewPost.js",["141"],"import React, { useState , useRef } from 'react';\r\nimport './NewPost.css';\r\nimport { useAuth } from '../../container/Authentication/AuthProvider';\r\nimport firebase from 'firebase';\r\nimport { db , storage} from '../../firebase';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst NewPost =  () => {\r\n\r\n\r\n    const [image , setImage] = useState(null);\r\n    const [caption, setCaption] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const [error , setError] = useState('');   \r\n    // const [url, setUrl] = useState('');\r\n    const history = useHistory();\r\n\r\n    const { currentUser } = useAuth();\r\n    const postRef = useRef();\r\n\r\n    const fileSelectedHandler = (e)=> {\r\n        if(e.target.files[0]){\r\n          setImage(e.target.files[0]);\r\n        }  \r\n    }\r\n\r\n    const handleUpload = (e)=> {\r\n\r\n      e.preventDefault()\r\n\r\n        if(image){\r\n          const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n          uploadTask.on(\r\n            'state_changed',\r\n            (snapshot)=>{\r\n                const progress = Math.round(\r\n                  snapshot.bytesTransferred / snapshot.totalBytes * 100\r\n                );\r\n                setProgress(progress)\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n              alert(error.message);\r\n              setError(error);\r\n            },\r\n            ()=> {\r\n  \r\n                storage\r\n                  .ref('images')\r\n                  .child(image.name)\r\n                  .getDownloadURL()\r\n                  .then( url => {\r\n  \r\n                      db.collection('posts').add({\r\n                          timestamp : firebase.firestore.FieldValue.serverTimestamp(),\r\n                          caption : caption,\r\n                          imageUrl : url,\r\n                          email : currentUser.email\r\n                      });\r\n  \r\n                      setProgress(0);\r\n                      setCaption('');\r\n                      setImage(null);\r\n                  })\r\n  \r\n            },\r\n            history.push('/homepage')\r\n          )\r\n        }\r\n        else if(!image){\r\n\r\n            db.collection('posts').add({\r\n              timestamp : firebase.firestore.FieldValue.serverTimestamp(),\r\n              caption : caption,\r\n              imageUrl : null,\r\n              email : currentUser.email\r\n          });\r\n\r\n          setProgress(0);\r\n          setCaption('');\r\n          setImage(null);\r\n        }\r\n        history.push('/homepage')\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"new_post\">   \r\n        \r\n            <form  className=\"new_post_form\" onSubmit={handleUpload}>\r\n                <label \r\n                htmlFor=\"write\" \r\n                className=\"new_post_form_label\">\r\n                Post whatever you have in your Mind 🧐\r\n                </label>\r\n\r\n                <br/>\r\n\r\n                <textarea \r\n                name=\"write\" \r\n                id=\"write\" \r\n                cols=\"100\" \r\n                rows=\"5\" \r\n                className=\"new_post_form_textarea\" \r\n                ref={postRef}\r\n                onChange={ e => setCaption(e.target.value)}\r\n                value={caption}>\r\n                </textarea>\r\n\r\n                <br/>\r\n\r\n                <progress value={progress} max='100'/>\r\n\r\n                <br/>\r\n\r\n                <input \r\n                type=\"file\" \r\n                className=\"new_post_form_fileupload\" \r\n                onChange={fileSelectedHandler}/>\r\n\r\n                <br/>\r\n        \r\n                <input \r\n                type=\"submit\" \r\n                className=\"new_post_form_button\"/>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewPost;","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\Chatroom_sidebar_components\\Sidebar.js",["142","143"],"import React,{useState , useEffect} from 'react';\r\nimport {SearchOutlined} from '@material-ui/icons';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {db} from '../../../firebase';\r\n\r\nimport './Sidebar.css'\r\n\r\nimport  Logo from '../../../assets/Images/logo.png';\r\nimport SidebarChat from './Sidebar_chat/SidebarChat';\r\n\r\n\r\nconst Sidebar = ()=> {\r\n\r\n    const [addRoom, setAddRoom] = useState('');\r\n    const [rooms , setRooms] =useState([]);\r\n    const [search, setSearch] =useState('');\r\n    const[trigger ,setTrigger]=useState(false);\r\n\r\n    //a life cycle hook in React functional Component that will basically do task of all lifecycle mthods of class component all by himeself\r\n    useEffect(() => {\r\n   \r\n        //here we are fetching data of our room name from firestore db collection named as rooms\r\n           const unsubscribe =  db.collection('rooms').onSnapshot(snapshot => {\r\n\r\n            //once data is fetched we are adding it to our rooms state hooks using setRoom method\r\n            setRooms(snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                room:doc.data()\r\n                })\r\n            ))\r\n        })\r\n        return ()=> {\r\n            unsubscribe();\r\n        }\r\n    }, [])\r\n    // console.log(rooms);\r\n\r\n    //this const will map through our rooms array in state and will pass props from each fetched room data from database into our sidebarchat component\r\n    const room = rooms.filter(({room}) => {\r\n        if(search === ''){\r\n            return room;\r\n        }\r\n        else if (room.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())){\r\n            return room;\r\n        }\r\n    }).map(({id, room})=>{\r\n        return <SidebarChat key={id} id={id} roomName={room.name}/>\r\n    })\r\n\r\n    const toggler = ()=> {\r\n        setTrigger(!trigger);\r\n    }\r\n\r\n    const onCreateRoom = ()=> {\r\n        if(addRoom){\r\n\r\n            db.collection('rooms').add({\r\n                name : addRoom\r\n            })\r\n\r\n            setTrigger(false);\r\n            setAddRoom('');\r\n\r\n        }\r\n         \r\n            console.log(addRoom);      \r\n}\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                {/* <img src={Logo} alt=\"logo\" className=\"sidebar_logo\"/> */}\r\n                <h1 className=\"sidebar_para\">MUMBLE</h1>\r\n            </div>\r\n            <div className=\"sidebar_addRooms\" >\r\n                <h3 className=\"sidebar_addRooms-text\" onClick={toggler}>Add a Room <AddCircleOutlineIcon/></h3>\r\n                {\r\n                    trigger ? \r\n                    \r\n                    <form className=\"sidebar_addRooms-form\" onSubmit={onCreateRoom}>\r\n                        <input type=\"text\" className=\"sidebar_addRooms-form-input\" placeholder='Enter a room name' onChange={e=> setAddRoom(e.target.value)}/>\r\n                        <button disabled={!addRoom} type='submit' className=\"sidebar_addRooms-form-button\">Create Room</button>\r\n                    </form>\r\n\r\n                    :\r\n\r\n                    null\r\n                    \r\n                }\r\n              \r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchOutlined/>\r\n                        <input type=\"text\" placeholder=\"Search for a Chat\" value={search} onChange={(e)=> setSearch(e.target.value)}/>\r\n                </div> \r\n            </div>\r\n            <div className=\"sidebar_chat\">\r\n                {room}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\ChatroomWelcome\\ChatroomWelcomePage.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\Chatroom_chat\\Chat.js",["144","145","146"],"import React,{useEffect, useState ,useContext} from 'react'\r\nimport {Avatar} from '@material-ui/core';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport ChatBubble from './Chat_bubble/ChatBubble';\r\nimport { useParams } from 'react-router-dom';\r\nimport {db} from '../../../firebase';\r\nimport firebase from 'firebase';\r\nimport {useAuth} from '../../../container/Authentication/AuthProvider';\r\nimport Background from '../../../assets/Images/cubes.png';\r\n// import ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n\r\n//our stylesheet for this component\r\nimport './Chat.css';\r\n\r\nconst Chat=(props)=> {\r\n\r\n    const {currentUser} = useAuth();\r\n\r\n    const [seed , setSeed] = useState('');\r\n    const [input , setInput] = useState('');\r\n    const {roomId} = useParams();\r\n    const [roomName , setRoomName] = useState('');\r\n    const [messages , setMessages] = useState([]);\r\n    // const [userName,setUserName] = useState('');\r\n\r\n    console.log(props.userName);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //we use this useEffect to fetch room name from our room collection in firestore db and set room name in chat header dynamically and this useeffect trgiggers when ever the roomId chnage as we have set\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setRoomName(snapshot.data().name)\r\n            });\r\n\r\n            db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp','asc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map( doc=> doc.data() ))\r\n            })\r\n        }\r\n    },[roomId])\r\n\r\n    //we use this useEffect to generate a random no. that will be use as seed to fetch random avatar photo from human dicebear api and this useeffect triggers when ever the roomId chnage as we have set\r\n    useEffect(()=> {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n    },[roomId])\r\n\r\n    // console.log(messages);\r\n\r\n    const sendMessage = (e)=> {\r\n        e.preventDefault();\r\n\r\n        // console.log('you typed' , input);\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message : input,\r\n            name : currentUser.email,\r\n            timestamp : firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n\r\n        setInput('');\r\n    }\r\n\r\n    const message = messages.map( message => {\r\n        return <ChatBubble name={message.name} message={message.message} timestamp={new Date(message.timestamp?.toDate()).toUTCString()}/>  \r\n    })\r\n\r\n    const style ={\r\n        backgroundImage: Background,\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='chat'>\r\n            <div className=\"chat_header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/avataaars/${seed}.svg`}/>\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3 className=\"chat_headerInfo-roomname\">{roomName}</h3>\r\n                    <p>\r\n                    Last message on : {''}\r\n                    {new Date(messages[messages.length -1]?.timestamp?.toDate()).toUTCString()}\r\n                    </p>\r\n\r\n                </div>\r\n\r\n                <div className=\"chat_headeremote\">\r\n                    (̶◉͛‿◉̶) \r\n                </div>\r\n               \r\n            </div>\r\n\r\n            <div className=\"chat_body\">\r\n                {message}   \r\n            </div>\r\n\r\n            <div className=\"chat_footer\">\r\n                {/* <InsertEmoticonIcon/> */}\r\n                <form>\r\n                    <input className=\"chat_footer-input\" type=\"text\" placeholder='Write a message ...' onChange={(e)=> setInput(e.target.value)} value={input}/>\r\n                    <button style={{visibility:'hidden',display:'none'}} type='submit' onClick={sendMessage}><TelegramIcon/></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\About_us\\About.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Homepage\\Homepage.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Footer\\Footer.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Features\\Features.js",["147"],"import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxillary';\r\n\r\n//features svg imports\r\nimport Intro from '../../../assets/Images/feature_intro.svg';\r\nimport Posting from '../../../assets/Images/posting-feature.svg';\r\nimport Chatting from '../../../assets/Images/chatting-features.svg';\r\nimport Expert from '../../../assets/Images/expert-features.svg';\r\n\r\nimport './Features.css';\r\n\r\n//bootstrap components\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\nconst features = ()=> {\r\n    return(\r\n        <Aux >\r\n            <Carousel className=\"feature-section\" nextLabel=\"\" prevLabel=\"\" id=\"features\">\r\n                <Carousel.Item>\r\n                    <img className=\"feature-section_img\" src={Intro} alt=\"First slide\"/>\r\n                    <Carousel.Caption className=\"feature-section_details\">\r\n                        <h3>Mumble</h3>\r\n                        <p>There is so much you could do in MUMBLE.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item>\r\n                    <img className=\"feature-section_img\" src={Posting} alt=\"Third slide\"/>\r\n                    <Carousel.Caption className=\"feature-section_details\">\r\n                        <h3>Posting</h3>\r\n                        <p>Post all your secret and desires anonomously.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item>\r\n                    <img className=\"feature-section_img\" src={Chatting} alt=\"Third slide\"/>\r\n                    <Carousel.Caption className=\"feature-section_details\">\r\n                        <h3>Chatting</h3>\r\n                        <p>Interact 1 on 1 with other user of MUMBLE randomly or better talk with everyone in our Group chat section.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n\r\n            </Carousel>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default features;","C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\container\\Landing _Page\\Navigation\\Navigation.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Comments\\Comments.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\Chatroom_chat\\Chat_bubble\\ChatBubble.js",[],"C:\\Users\\anubh\\Desktop\\Project\\mumble\\src\\component\\Chatroom_component\\Chatroom_sidebar_components\\Sidebar_chat\\SidebarChat.js",[],["148","149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":16,"column":21,"nodeType":"156","messageId":"157","endLine":16,"endColumn":32},{"ruleId":"158","severity":1,"message":"159","line":31,"column":7,"nodeType":"160","endLine":31,"endColumn":9,"suggestions":"161"},{"ruleId":"154","severity":1,"message":"162","line":16,"column":16,"nodeType":"156","messageId":"157","endLine":16,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":18,"column":21,"nodeType":"156","messageId":"157","endLine":18,"endColumn":32},{"ruleId":"154","severity":1,"message":"163","line":18,"column":12,"nodeType":"156","messageId":"157","endLine":18,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":19,"column":20,"nodeType":"156","messageId":"157","endLine":19,"endColumn":31},{"ruleId":"154","severity":1,"message":"163","line":14,"column":12,"nodeType":"156","messageId":"157","endLine":14,"endColumn":17},{"ruleId":"154","severity":1,"message":"164","line":8,"column":9,"nodeType":"156","messageId":"157","endLine":8,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":39,"column":40,"nodeType":"167","messageId":"168","endLine":39,"endColumn":42},{"ruleId":"154","severity":1,"message":"169","line":1,"column":36,"nodeType":"156","messageId":"157","endLine":1,"endColumn":46},{"ruleId":"154","severity":1,"message":"170","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":26},{"ruleId":"154","severity":1,"message":"171","line":75,"column":11,"nodeType":"156","messageId":"157","endLine":75,"endColumn":16},{"ruleId":"154","severity":1,"message":"172","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":14},{"ruleId":"150","replacedBy":"173"},{"ruleId":"152","replacedBy":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Logo' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useContext' is defined but never used.","'InsertEmoticonIcon' is defined but never used.","'style' is assigned a value but never used.","'Expert' is defined but never used.",["175"],["176"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},"Update the dependencies array to be: [currentUser.email]",{"range":"180","text":"181"},[764,766],"[currentUser.email]"]